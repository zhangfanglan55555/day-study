/**
 * 基于构造函数创建自定义类（constructor)
 * 1.在普通函数的基础上"new xxx()",这样就不是普通函数执行了是构造函数执行，当前的函数名称之为“类名“，接收的返回结果是当前
 * 类的实例。
 * 2.自己创建的类名最好第一个单词首字母大写
 * 3.构造函数设计模式执行，主要用于组件、类库、插件、框架等的封装，平时编写逻辑一般不这样处理
 */

function Fn() {

}
Fn();//普通函数执行
var f = new Fn();//Fn是类，f是类的一个实例


var obj1 = {};//obj1是Object的一个实例
var obj2 = {};//obj2是Object的一个实例

/**
 * JS中创建值有两种方式：
 * 1.字面量表达式
 * 2.构造函数模式
 */
var obj = {};//字面量方式创建
var obj = new Object();//构造函数模式
//不管是哪种方式创造出来的，都是Object类的实例，而实例之间是独立分开的，所以 var xx = {};这种模式就是单例模式

//=》基本数据类型基于两种不同模式创建出来的值是不一样的
//>基于字面量方式创建出来的值是基本类型值
//>基于构造函数方式创建出来的值是引用类型值
/**
 * num2是数字类的实例，num1也是；它只是js表达数字的方式之一，都可以使用数字类提供的属性和方法
 */

    var num1 = 12;//12
    typeof num1 // "number"
    var num2 = new Number(12);//{12}
    typeof num2 //'object'